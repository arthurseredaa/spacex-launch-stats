{"version":3,"sources":["logo.png","components/LaunchItem.jsx","components/MissionKey.jsx","components/Launches/Launches.jsx","components/LaunchDetails.jsx","components/RocketDetails.jsx","App.js","reportWebVitals.js","index.js","components/Launches/Launches.module.css"],"names":["LaunchItem","mission_name","flight_number","launch_date_local","launch_success","style","width","className","format","right","bottom","to","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","useState","currentPage","perPage","state","setState","console","log","indexOfLastLaunch","indexOfFirstLaunch","currentLaunches","launches","slice","handleClick","evt","Number","target","id","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","map","number","classes","paginationButton","opacity","onClick","renderLaunches","launch","display","flexWrap","justifyContent","paddingBottom","position","launchesWrapper","buttonsWrapper","LAUNCH_QUERY","LaunchDetails","history","useHistory","useParams","variables","rocket","links","details","flickr_images","mission_patch_small","video_link","goBack","src","alt","rocket_id","rocket_name","href","rel","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","link","overflow","height","maxHeight","ROCKET_QUERY","RocketDetails","rocket_type","success_rate_pct","first_flight","mass","diameter","description","meters","feet","kg","lb","client","ApolloClient","uri","cache","InMemoryCache","App","Logo","margin","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.19caf824.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5de1e5b3.png\";","import { Link } from \"react-router-dom\";\nimport Moment from 'react-moment';\n\nexport const LaunchItem = ({\n  mission_name,\n  flight_number,\n  launch_date_local,\n  launch_success,\n}) => {\n  return (\n    <div style={{width: \"49%\"}} className=\"card border-light my-5 position-relative\">\n      <div className=\"card-header\">â„–{flight_number}</div>\n      <div className=\"card-body\">\n        <h4 className=\"card-title mb-0\">\n          Mission:{\" \"}\n          <span className={launch_success ? \"text-success\" : \"text-danger\"}>\n            {mission_name}\n          </span>\n        </h4>\n        <p>\n          <Moment format=\"DD-MM-YYYY HH:mm\">{launch_date_local}</Moment>\n        </p>\n        <Link\n          style={{ right: \"3%\", bottom: \"10%\" }}\n          to={`/${flight_number}`}\n          className=\"btn btn-outline-info position-absolute\"\n        >\n          Details\n        </Link>\n      </div>\n    </div>\n  );\n};\n","export const MissionKey = () => (\n  <div className=\"my-3 w-50 mx-auto\">\n    <p>\n      <span className=\"px-3 mr-2 bg-success\"></span> = Success\n    </p>\n    <p>\n      <span className=\"px-3 mr-2 bg-danger\"></span> = Fail\n    </p>\n  </div>\n);\n","import { useQuery, gql } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport { LaunchItem } from \"../LaunchItem\";\nimport { MissionKey } from \"../MissionKey\";\nimport classes from \"./Launches.module.css\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaucnhesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_success\n      launch_date_local\n    }\n  }\n`;\n\nexport const Launches = () => {\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n  const [state, setState] = useState({\n    currentPage: 1,\n    perPage: 6,\n  });\n\n  const { currentPage, perPage } = state;\n\n  if (loading) {\n    return <h1 className=\"w-50 mx-auto text-center my-5\">Loading...</h1>;\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  const indexOfLastLaunch = currentPage * perPage,\n    indexOfFirstLaunch = indexOfLastLaunch - perPage,\n    currentLaunches =\n      data && data.launches.slice(indexOfFirstLaunch, indexOfLastLaunch);\n\n  const handleClick = (evt) =>\n    setState({ ...state, currentPage: Number(evt.target.id) });\n\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(data && data.launches.length / perPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const renderPageNumbers = pageNumbers.map((number) => {\n    return (\n      <span\n        className={classes.paginationButton + \" btn btn-primary mx-1\"}\n        style={{ opacity: `${number === currentPage ? \"1\" : \".6\"}` }}\n        key={number}\n        id={number}\n        onClick={handleClick}\n      >\n        {number}\n      </span>\n    );\n  });\n\n  const renderLaunches =\n    currentLaunches &&\n    currentLaunches.map((launch, id) => <LaunchItem key={id} {...launch} />);\n\n  return (\n    <>\n      <p className=\"h4 mt-4 mx-auto w-50 font-weight-light\">\n        Launches ({data && data.launches.length + 1})\n      </p>\n      <MissionKey />\n      <div\n        className=\"mx-auto\"\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          width: \"60%\",\n          paddingBottom: \"150px\",\n          position: \"relative\",\n        }}\n      >\n        <div className={classes.launchesWrapper}>{renderLaunches}</div>\n        <div className={classes.buttonsWrapper}>{renderPageNumbers}</div>\n      </div>\n    </>\n  );\n};\n","import { gql, useQuery } from \"@apollo/client\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport Moment from \"react-moment\";\n\nconst LAUNCH_QUERY = gql`\n  query LaucnhQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      mission_name\n      launch_date_local\n      launch_success\n      details\n      rocket {\n        rocket_name\n        rocket_type\n        rocket_id\n      }\n      links {\n        mission_patch_small\n        video_link\n        flickr_images\n      }\n    }\n  }\n`;\n\nexport const LaunchDetails = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { flight_number: +id },\n  });\n\n  const settings = {\n    className: \"slider-width\",\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    adaptiveHeight: true,\n  };\n\n  if (loading) {\n    return <h1 className=\"w-50 mx-auto text-center my-5\">Loading...</h1>;\n  }\n\n  if (error) console.log(error);\n\n  const {\n    mission_name,\n    launch_date_local,\n    launch_success,\n    rocket,\n    links,\n    details,\n  } = data && data.launch;\n\n  const { flickr_images, mission_patch_small, video_link } = links;\n\n  return (\n    <div className=\"jumbotron w-75 mx-auto mt-lg-5 pt-4\">\n      <button\n        className=\"btn btn-primary mb-5\"\n        onClick={() => history.goBack()}\n      >\n        Back\n      </button>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <h1 className=\"display-4 my-3\">\n          <span className=\"text-dark\">Mission:</span> {mission_name}\n        </h1>\n        <img\n          src={mission_patch_small}\n          alt=\"mission patch\"\n          className=\"pr-lg-5\"\n        />\n      </div>\n      <hr className=\"my-4\" />\n      <h4 className=\"mb-3\">Launch Details</h4>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">\n          {\" \"}\n          Success:{\" \"}\n          {launch_success ? (\n            <span className=\"text-success h6\">yes</span>\n          ) : (\n            <span className=\"text-danger\">no</span>\n          )}\n        </li>\n        <li className=\"list-group-item\">\n          Date:{\" \"}\n          <b>\n            <Moment format=\"DD-MM-YYYY HH:mm\">{launch_date_local}</Moment>\n          </b>\n        </li>\n        <li className=\"list-group-item\">\n          {\" \"}\n          Rocket:{\" \"}\n          <Link to={`/rocket/${rocket.rocket_id}`}>{rocket.rocket_name}</Link>\n        </li>\n        {video_link && (\n          <li className=\"list-group-item\">\n            <a href={video_link} rel=\"noreferrer\" target=\"_blank\">\n              Click here to watch the video of launching\n            </a>\n          </li>\n        )}\n      </ul>\n\n      <hr />\n      <p className=\"h5\">{details}</p>\n\n      {flickr_images.length > 0 && (\n        <div className=\"w-50 mx-auto h-50\">\n          <Slider {...settings}>\n            {flickr_images &&\n              flickr_images.map((link) => (\n                <div style={{ overflow: \"hidden\", height: \"100px\" }}>\n                  <img\n                    src={link}\n                    alt=\"Flickr images\"\n                    style={{\n                      width: \"700px\",\n                      height: \"500px\",\n                      maxHeight: \"700px\",\n                    }}\n                  />\n                </div>\n              ))}\n          </Slider>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { gql, useQuery } from \"@apollo/client\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst ROCKET_QUERY = gql`\n  query RocketQuery($rocket_id: String!) {\n    rocket(rocket_id: $rocket_id) {\n      rocket_name\n      rocket_type\n      success_rate_pct\n      first_flight\n      height {\n        meters\n        feet\n      }\n      mass {\n        kg\n        lb\n      }\n      diameter {\n        meters\n        feet\n      }\n      description\n    }\n  }\n`;\n\nexport const RocketDetails = () => {\n  const { rocket_id } = useParams();\n  const { loading, error, data } = useQuery(ROCKET_QUERY, {\n    variables: {\n      rocket_id: rocket_id,\n    },\n  });\n  const history = useHistory();\n\n  if (loading) {\n    return <h1 className=\"w-50 mx-auto text-center my-5\">Loading...</h1>;\n  }\n\n  if (error) console.log(error);\n\n  const {\n    rocket_name,\n    rocket_type,\n    success_rate_pct,\n    first_flight,\n    height,\n    mass,\n    diameter,\n    description,\n  } = data && data.rocket;\n  console.log(data);\n  return (\n    <div className=\"jumbotron w-75 mx-auto mt-lg-5 pt-4\">\n      <button className=\"btn btn-primary mb-5\" onClick={() => history.goBack()}>\n        Back\n      </button>\n      <div>\n        <p className=\"h1\">\n          <span className=\"text-dark\">Name:</span> {rocket_name}\n        </p>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">Type: {rocket_type}</li>\n          <li className=\"list-group-item\">\n            Flight success rate: {success_rate_pct}\n          </li>\n          <li className=\"list-group-item\">First flight: {first_flight}</li>\n          <li className=\"list-group-item\">\n            Height: {height.meters} meters ({height.feet} feet)\n          </li>\n          <li className=\"list-group-item\">\n            Mass: {mass.kg} kg ({mass.lb} lb)\n          </li>\n          <li className=\"list-group-item\">\n            Diameter: {diameter.meters} meters ({diameter.feet} feet)\n          </li>\n        </ul>\n        <hr />\n        <p className=\"h4 text-dark\">Description:</p>\n        <p className=\"h5\">{description}</p>\n      </div>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport Logo from \"./logo.png\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { Launches } from \"./components/Launches/Launches\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { LaunchDetails } from \"./components/LaunchDetails\";\nimport { RocketDetails } from \"./components/RocketDetails.jsx\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <img\n            src={Logo}\n            alt=\"SpaceX\"\n            style={{ width: \"300px\", display: \"block\", margin: \"auto\" }}\n          />\n          <Route path=\"/\" exact component={Launches} />\n          <Route path={\"/:id\"} exact component={LaunchDetails} />\n          <Route path={\"/rocket/:rocket_id\"} exact component={RocketDetails} />\n        </div>\n      </ApolloProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationButton\":\"Launches_paginationButton__3weL_\",\"buttonsWrapper\":\"Launches_buttonsWrapper__2tx8a\",\"launchesWrapper\":\"Launches_launchesWrapper__3ANoU\"};"],"sourceRoot":""}